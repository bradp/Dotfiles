#!/usr/bin/env bash
#
# Start the day with the weather & opening all my apps, end the day by closing the apps and ejecting HDDs.
#
# needs these enviroment variables to be set:
# OPENWEATHER_API_KEY

#######################################
# Output the weather for a given day.
#######################################
function _show_weather() {
    local weather
    local current
    local feels_like

    weather=$(curl --silent "https://api.openweathermap.org/data/2.5/weather?zip=53132&units=imperial&APPID=${OPENWEATHER_API_KEY}" )
    current=$(echo "$weather" | jq -r ".weather[0].main")
    feels_like=$(echo "$weather" | jq -r '.main.feels_like' )
    feels_like=${feels_like%.*}

    case $(echo "$weather" | jq -r '.weather[0].icon') in
        "01d") icon="" ;;
        "01n") icon="" ;;
        "02d") icon="" ;;
        "02n") icon="" ;;
        "03d") icon="" ;;
        "03n") icon="" ;;
        "04d") icon=" " ;;
        "04n") icon=" " ;;
        "09d") icon="" ;;
        "09n") icon="" ;;
        "10d") icon="" ;;
        "10n") icon="" ;;
        "11d") icon="" ;;
        "11n") icon="" ;;
        "13d") icon="" ;;
        "13n") icon="" ;;
        "50d") icon="" ;;
        "50n") icon="" ;;
    esac

    echo "${icon}  ${current}  ${feels_like}° "
}

#######################################
# Show a cowsay cow
#######################################
function _show_cow() {
    local cows
    local random_cow
    local cow

    cows=(bunny default moose small stegosaurus www owl snail llama)
    random_cow=$(($RANDOM % ${#cows[@]}))
    cow=${cows["$random_cow"]}

    fortune -s | cowsay -f "$cow"
}

#######################################
# Start the day.
#######################################
function _run_start() {
    clear

    echo ""
    echo ""
    echo ""
    echo ""

    _show_cow

    echo ""
    echo ""
    echo "Good morning! Today's weather is: $(_show_weather)"
    echo ""
    echo "Starting up  Chrome,  Airmail,  Slack,  VSCode,  Notion,  Pocket, and  Stream Deck ... "
    echo ""
    echo ""
    echo "                       "
    echo ""
    echo ""


    osascript -e 'tell application "Chrome" to activate' > /dev/null
    osascript -e 'tell application "Airmail" to activate' > /dev/null
    osascript -e 'tell application "Slack" to activate' > /dev/null
    osascript -e 'tell application "Visual Studio Code" to activate' > /dev/null
    osascript -e 'tell application "Notion" to activate' > /dev/null
    osascript -e 'tell application "Pocket" to activate' > /dev/null
    osascript -e 'tell application "Stream Deck" to activate' > /dev/null
    osascript -e 'tell application "System Events" to tell process "Stream Deck" to tell window 1 to click (first button whose subrole = "AXCloseButton")' > /dev/null
}

#######################################
# End the day
#######################################
function _run_end() {
    local confirm

    echo ""
    echo "Done for the day?"
    read -r -p "(press enter to confirm) " confirm
    echo ""
    echo ""

    if [ -n "$confirm" ]; then
        exit
    fi

    clear

    echo ""
    echo ""
    echo "晴 Quitting time!"
    echo ""
    echo "Closing  Airmail,  Slack,  VSCode,  Notion,  Pocket, and  Stream Deck ... "
    echo ""
    echo "Ejecting external drives ... "
    echo ""

    osascript -e 'tell application "Airmail 3" to quit'
    osascript -e 'tell application "Slack" to quit'
    osascript -e 'tell application "Visual Studio Code" to quit'
    osascript -e 'tell application "Stream Deck" to quit'

    osascript -e 'tell application "Finder" to eject disk "Small"'
    osascript -e 'tell application "Finder" to eject disk "Backup 1"'
    osascript -e 'tell application "Finder" to eject disk "Backup 2"'

    echo ""
    echo "Current weather is: $(_show_weather)"
    echo ""
    echo ""
    echo "  Time to relax  "
    echo ""
}

if [[ "${1}" == "end" ]]; then
	_run_end
else
	_run_start
fi
